buildscript {
	repositories {
		mavenCentral()
		//mavenLocal()
		jcenter()

		maven {
			url 'http://maven.magik6k.net/'
		}
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
		classpath 'us.phildop:gradle-sublimetext-plugin:0.5.3'
	}
}

apply from: 'gradle/modules/utils.gradle'

apply plugin: 'java'
//apply plugin: 'checkstyle'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'sublimeText'
apply plugin: 'idea'

ext.config = parseConfig("build.properties")

version = config.nova.version
group = "nova.core"

if (System.getenv("BUILD_NUMBER") != null)
	version += ".${System.getenv("BUILD_NUMBER")}"
else
	version += "-" + getGitRef()

if (config.nova.subversion != null && config.nova.subversion != "")
	version += "-${config.nova.subversion}"

ext.simpleVersion = version

/*checkstyle {
    configFile = file('checkstyle.xml')
    configProperties = [
        "name": project.name,
        "organization": project.organization,
        "year": project.inceptionYear,
        "suppressions": file('checkstyle-suppressions.xml')
    ]
}*/

compileJava {
	sourceCompatibility = '1.8'
	options.encoding = 'UTF-8'
	options.fork = true
	options.compilerArgs << '-Xlint'
}

repositories {
	mavenCentral()
	maven {
		url 'http://maven.magik6k.net/'
	}
}

dependencies {
	compile 'com.google.guava:guava:18.0'
	compile 'org.msgpack:msgpack-core:0.7.0-p4'
	compile 'com.typesafe:config:1.2.1'
	compile 'se.jbee:silk-di:0.6'
	testCompile "junit:junit:4.12"
	testCompile 'org.assertj:assertj-core:1.+'

	//checkstyle 'com.puppycrawl.tools:checkstyle:6.2'
}

task sourceJar(type: Jar) {
	from sourceSets.main.java
	from sourceSets.main.resources
	classifier = "sources"
}

task apiJar(type: Jar) {
	from sourceSets.main.output
	from sourceSets.main.java
	classifier = 'api'
	include 'nova/core/**'
}

javadoc {
	include 'nova/core/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from 'build/docs/javadoc'
	classifier 'javadoc'
}

shadowJar {
	manifest {
		attributes("Implementation-Title": "NovaCore", "Implementation-Version": version)
	}
}

artifacts {
	archives apiJar
	archives jar
	archives javadocJar
	archives shadowJar
	archives sourceJar
}

print components

publishing {
	publications {
		main(MavenPublication) {
			from components.java
			
			artifact apiJar
			artifact javadocJar
			artifact shadowJar
			artifact sourceJar

			pom.withXml(writePom())
		}
		
		latest(MavenPublication) {
			version "latest-${config.nova.subversion}"
			from components.java

			artifact apiJar
			artifact javadocJar
			artifact shadowJar
			artifact sourceJar

			pom.withXml(writePom())
		}
	}
	repositories {
		if (System.getenv("MAVEN_DIR") != null) {
			maven {
				url System.getenv("MAVEN_DIR")
			}
		}
	}
}

sublimeText {
	defaultFileExcludePatterns = ['.project', '.classpath', '.pydevproject']
	defaultFolderExcludePatterns = ['.gradle', 'bin', 'build', '.settings']
	generateSublimeJavaClasspath = true
	generateSublimeJavaSrcpath = true
	addGradleCompile = true
}

test {
	testLogging {
		exceptionFormat = 'full'
	}

	testLogging.showStandardStreams = true

	beforeTest {descriptor ->
		logger.lifecycle("Running " + descriptor)
	}
}
